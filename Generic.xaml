<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:BodDetect">

    <!--<SolidColorBrush x:Key="WindowBackground" Color="#007ACB"></SolidColorBrush>
    <SolidColorBrush x:Key="WindowInnerBackground" Color="Transparent"></SolidColorBrush>
    <SolidColorBrush x:Key="WindowBorderBrush" Color="#920892"></SolidColorBrush>
    <DropShadowEffect x:Key="WindowDropShadow" Color="#F472F4" BlurRadius="8" ShadowDepth="0" Direction="0" Opacity="0.7" />
    <SolidColorBrush x:Key="CaptionForeground" Color="White"></SolidColorBrush>
    <LinearGradientBrush x:Key="CaptionBackground" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#571457" Offset="0"/>
        <GradientStop Color="#6A196A" Offset="1"/>
    </LinearGradientBrush>
    --><!--MessageBoxX--><!--
    <SolidColorBrush x:Key="InfoForeground" Color="White"></SolidColorBrush>
    <SolidColorBrush x:Key="QuestionForeground" Color="#74B80C"></SolidColorBrush>
    <SolidColorBrush x:Key="WarningForeground" Color="DarkOrange"></SolidColorBrush>
    <SolidColorBrush x:Key="ErrorForeground" Color="#E74E4E"></SolidColorBrush>
    --><!--WaitingBox--><!--
    <SolidColorBrush x:Key="WaitingBoxBackground" Color="#921692"></SolidColorBrush>
    --><!--边框：Menu--><!--
    <DropShadowEffect x:Key="DefaultDropShadow" Color="Black" BlurRadius="5" ShadowDepth="2" Direction="315" Opacity="0.6" />
    --><!--输入组件-->
    <SolidColorBrush x:Key="TextForeground" Color="White"></SolidColorBrush>
    <SolidColorBrush x:Key="TextBackground" Color="#0D234B"></SolidColorBrush>
    <SolidColorBrush x:Key="TextSelectionBrush" Color="#8F8787"></SolidColorBrush>
    <!--TextBox默认Label颜色--><!--
    <SolidColorBrush x:Key="TextLabelBackground" Color="#508AB6"></SolidColorBrush>
    --><!--输入框-->
    <SolidColorBrush x:Key="ControlBorderBrush" Color="#999C9F"></SolidColorBrush>
    <SolidColorBrush x:Key="MouseOverBorderBrush" Color="#F6D1D1"></SolidColorBrush>
    <SolidColorBrush x:Key="FocusBackground" Color="#365080"></SolidColorBrush>
    <SolidColorBrush x:Key="FocusBorderBrush" Color="#EBCECE"></SolidColorBrush>
    <!--ScrollBar--><!--
    <SolidColorBrush x:Key="ScrollBarForeround" Color="#877F7F"></SolidColorBrush>
    <SolidColorBrush x:Key="ScrollBarBackground" Color="#3E3E42"></SolidColorBrush>

    --><!--ItemsControl:DataGrid,Tree--><!--
    <SolidColorBrush x:Key="HeaderBorderBrush" Color="#A6FFA500"></SolidColorBrush>
    <SolidColorBrush x:Key="HeaderBackground" Color="#0A48D3"></SolidColorBrush>
    <SolidColorBrush x:Key="ItemsContentBackground" Color="#1389D7"></SolidColorBrush>
    <SolidColorBrush x:Key="ItemsAlternationContentBackground" Color="#128EE0"></SolidColorBrush>
    <SolidColorBrush x:Key="GridLinesBrush" Color="#A6D0C2A7"></SolidColorBrush>
    <SolidColorBrush x:Key="ItemSelectedForeground" Color="White"></SolidColorBrush>
    <SolidColorBrush x:Key="ItemSelectedBackground" Color="#A145F8"></SolidColorBrush>
    <SolidColorBrush x:Key="ItemMouseOverBackground" Color="#BA7DF4"></SolidColorBrush>
    <SolidColorBrush x:Key="ItemMouseOverForeground" Color="White"></SolidColorBrush>
    --><!--高亮：日历Today--><!--
    <SolidColorBrush x:Key="ItemHighlighteBackground" Color="Blue"></SolidColorBrush>
    <SolidColorBrush x:Key="ItemHighlighteForeground" Color="White"></SolidColorBrush>

    --><!--普通无背景按钮-->
    <SolidColorBrush x:Key="CheckedForeground" Color="#F7B63E"></SolidColorBrush>
    <SolidColorBrush x:Key="MouseOverForeground" Color="Orange"></SolidColorBrush>
    <SolidColorBrush x:Key="PressedForeground" Color="DarkOrange"></SolidColorBrush>
    <SolidColorBrush x:Key="LinkForeground" Color="#0816BB"></SolidColorBrush>
    <!--Popup,ComboBox--><!--
    <SolidColorBrush x:Key="PopupBackground" Color="#066EB3"></SolidColorBrush>
    --><!--Button--><!--
    <SolidColorBrush x:Key="ButtonBackground" Color="#1D4A9A"></SolidColorBrush>
    <SolidColorBrush x:Key="ButtonForeground" Color="White"></SolidColorBrush>
    <SolidColorBrush x:Key="ButtonMouseOverBackground" Color="Orange"></SolidColorBrush>
    <SolidColorBrush x:Key="ButtonMouseOverForeground" Color="White"></SolidColorBrush>
    <SolidColorBrush x:Key="ButtonPressedBackground" Color="DarkOrange"></SolidColorBrush>
    <SolidColorBrush x:Key="ButtonPressedForeground" Color="White"></SolidColorBrush>
    --><!--Menu--><!--
    <SolidColorBrush x:Key="MenuForeground" Color="#920892"></SolidColorBrush>
    <SolidColorBrush x:Key="MenuBackground" Color="#DDD1D1"></SolidColorBrush>
    <SolidColorBrush x:Key="MenuBorderBrush" Color="DarkBlue"></SolidColorBrush>
    <SolidColorBrush x:Key="MenuMouseOverBackground" Color="#0D3CD2"></SolidColorBrush>
    <SolidColorBrush x:Key="MenuMouseOverForeground" Color="White"></SolidColorBrush>
    <SolidColorBrush x:Key="MenuPressedBackground" Color="#082CA0"></SolidColorBrush>
    <SolidColorBrush x:Key="MenuPressedForeground" Color="White"></SolidColorBrush>
    --><!--State brush--><!--
    <SolidColorBrush x:Key="SuccessfulfaiBrush" Color="#16B32A"></SolidColorBrush>
    <SolidColorBrush x:Key="FailedBrush" Color="#B92222"></SolidColorBrush>

    <FontFamily x:Key="FontFamily" >Microsoft YaHei</FontFamily>-->


    <Style TargetType="{x:Type local:ButtonEx}">
        <Style.Triggers>
            <Trigger Property="ButtonType" Value="Normal">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Background" Value="#f5f5f5"/>
                <Setter Property="MouseOverBackground" Value="#129611"/>
                <Setter Property="MousePressedBackground" Value="#1aad19"/>
                <Setter Property="Foreground" Value="#606060"/>
                <Setter Property="MouseOverForeground" Value="White"/>
                <Setter Property="MousePressedForeground" Value="White"/>
                <Setter Property="BorderBrush" Value="#e5e5e5"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:ButtonEx}">
                            <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True">
                                <TextBlock x:Name="txt" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{Binding MouseOverBackground,RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <Setter TargetName="txt" Property="Foreground" Value="{Binding MouseOverForeground,RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{Binding MouseOverBorderbrush,RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{Binding MousePressedBackground,RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <Setter TargetName="txt" Property="Foreground" Value="{Binding MousePressedForeground,RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="#bbbbbb"/>
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ButtonType" Value="Icon">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:ButtonEx}">
                            <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Image x:Name="Img" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{TemplateBinding Icon}" Margin="{TemplateBinding IconMargin}" Stretch="Uniform"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0.8"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value="0.9"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.3"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ButtonType" Value="Text">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Foreground" Value="#4ecb76"/>
                <Setter Property="MouseOverForeground" Value="#4fca76"/>
                <Setter Property="MousePressedForeground" Value="#4ecb76"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:ButtonEx}">
                            <TextBlock x:Name="txt" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{Binding MouseOverForeground,RelativeSource={RelativeSource TemplatedParent}}" TargetName="txt"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" Value="{Binding MousePressedForeground,RelativeSource={RelativeSource TemplatedParent}}" TargetName="txt"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.3"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ButtonType" Value="IconText">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Foreground" Value="#696969"/>
                <Setter Property="MouseOverForeground" Value="#4ecb76"/>
                <Setter Property="MousePressedForeground" Value="#4ecb75"/>
                <Setter Property="MouseOverBackground" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="CornerRadius" Value="0"/>
                <Setter  Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:ButtonEx}">
                            <Border x:Name="Bg" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Image Source="{TemplateBinding Icon}" Stretch="None" Margin="{TemplateBinding IconMargin}"/>
                                    <TextBlock x:Name="Txt" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </StackPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{Binding MouseOverForeground,RelativeSource={RelativeSource TemplatedParent}}" TargetName="Txt"/>
                                    <Setter Property="Background" Value="{Binding MouseOverBackground,RelativeSource={RelativeSource TemplatedParent}}" TargetName="Bg"/>
                                    <Setter Property="BorderBrush" Value="{Binding MouseOverBorderbrush,RelativeSource={RelativeSource TemplatedParent}}" TargetName="Bg"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" Value="{Binding MousePressedForeground,RelativeSource={RelativeSource TemplatedParent}}" TargetName="Txt"/>
                                    <Setter Property="Background" Value="{Binding MousePressedBackground,RelativeSource={RelativeSource TemplatedParent}}" TargetName="Bg"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.3"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="{x:Type local:TimeEditer}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#ececec"/>
        <Setter Property="Hour" Value="00"/>
        <Setter Property="Minute" Value="00"/>
        <Setter Property="Second" Value="00"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TimeEditer}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Margin="3 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="PART_TXTHOUR" HorizontalContentAlignment="Center" Cursor="Arrow" BorderThickness="0" SelectionBrush="White" AutoWordSelection="False" Text="{Binding Hour,RelativeSource={RelativeSource TemplatedParent},StringFormat={}{0:00},UpdateSourceTrigger=PropertyChanged}"  Foreground="Black" Focusable="True" IsReadOnly="True" IsReadOnlyCaretVisible="False"  VerticalAlignment="Center"  Height="60" FontWeight="Bold" VerticalContentAlignment="Center"/>
                            <TextBlock Text=":" VerticalAlignment="Center" Grid.Column="1" FontWeight="Bold" FontSize="30" />
                            <TextBox x:Name="PART_TXTMINUTE" HorizontalContentAlignment="Center" Cursor="Arrow" Grid.Column="2" BorderThickness="0" AutoWordSelection="False" Text="{Binding Minute,RelativeSource={RelativeSource TemplatedParent},StringFormat={}{0:00},UpdateSourceTrigger=PropertyChanged}" Foreground="Black" Focusable="True" IsReadOnly="True" IsReadOnlyCaretVisible="False" VerticalAlignment="Center" Height="60" FontWeight="Bold"  VerticalContentAlignment="Center"/>
                            <TextBlock Text=":" VerticalAlignment="Center" Grid.Column="3" FontWeight="Bold" FontSize="30" />
                            <TextBox x:Name="PART_TXTSECOND" HorizontalContentAlignment="Center" Cursor="Arrow" Grid.Column="4" BorderThickness="0" AutoWordSelection="False" Text="{Binding Second,RelativeSource={RelativeSource TemplatedParent},StringFormat={}{0:00},UpdateSourceTrigger=PropertyChanged}" Foreground="Black" Focusable="True" IsReadOnly="True" IsReadOnlyCaretVisible="False"  VerticalAlignment="Center" Height="60" FontWeight="Bold"  VerticalContentAlignment="Center"/>
                            <TextBox x:Name="PART_TXT4" Grid.Column="5" Background="Transparent" BorderThickness="0" IsReadOnly="True" AutoWordSelection="False" IsReadOnlyCaretVisible="False" Cursor="Arrow" FontWeight="Bold" Margin="20,0,0,0"/>

                            <Grid Grid.Column="5" HorizontalAlignment="Right" x:Name="numIncrease" Visibility="{TemplateBinding NumIncreaseVisible}">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <local:ButtonEx x:Name="PART_UP" Focusable="False"  ButtonType="Icon" Icon="/Resources/keyboard_arrow_up.png" Width="50" Height="50" VerticalAlignment="Bottom"/>
                                <local:ButtonEx x:Name="PART_DOWN" Focusable="False" ButtonType="Icon" Icon="/Resources/keyboard_arrow_down.png"  Width="50" Height="50" VerticalAlignment="Top" Grid.Row="1"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FIcon" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Resources/#SF2015"></Setter>
        <Setter Property="Foreground" Value="{StaticResource TextForeground}"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="20"/>

    </Style>

    <Style x:Key="BoxRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{StaticResource TextForeground}"></Setter>
        <Setter Property="Padding" Value="3 2 3 2"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="BorderThickness" Value="2"></Setter>
        <Setter Property="Height" Value="auto"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="true"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="grid" VerticalAlignment="Center">
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"  Height="{TemplateBinding Height}" HorizontalAlignment="Center"
                                Background="{TemplateBinding Background}" Width="{TemplateBinding Width}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <!--选中的状态标识-->
                        <TextBlock Text="&#xe606;" x:Name="checkState"   VerticalAlignment="Bottom" Visibility="Collapsed" Style="{StaticResource FIcon}"
                                   FontSize="14" Margin="1" HorizontalAlignment="Right" Foreground="{StaticResource CheckedForeground}">
                            <!--<Image Source="/Resources/scrop_din.png"/>-->
                        </TextBlock>
                    </Grid>
                    <!--触发器：设置选中状态符号-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="checkState" ></Setter>
                            <Setter Property="BorderBrush" Value="{StaticResource CheckedForeground}"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource MouseOverForeground}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" TargetName="grid" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
